{"version":3,"sources":["Components/Star.js","App.js","index.js"],"names":["Star","useState","planet","setPlanets","loading","setLoading","setApiCall","setError","useEffect","fetch","then","response","a","ok","Error","status","json","data","results","catch","error","message","finally","className","class","map","el","name","population","climate","type","onChange","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMA2DeA,EAzDF,WAAO,IAAD,EACeC,mBAAS,IADxB,mBACRC,EADQ,KACAC,EADA,OAEeF,oBAAS,GAFxB,mBAERG,EAFQ,KAECC,EAFD,OAGeJ,mBAAS,GAHxB,mBAGCK,GAHD,aAIeL,mBAAS,IAJxB,mBAIDM,GAJC,WAMfC,qBAAU,WACNH,GAAW,GAGXI,MAFS,iCAGJC,MAAK,SAACC,GAEH,GADAL,GAAW,SAAAM,GAAC,OAAIA,EAAI,MAChBD,EAASE,GACT,MAAM,IAAIC,MAAJ,0CAA0CH,EAASI,SAE7D,OAAOJ,EAASK,UAEnBN,MAAK,SAACO,GAEHd,EAAWc,EAAKC,YAEnBC,OAAM,SAACC,GACJb,EAASa,EAAMC,YAElBC,SAAQ,WACLjB,GAAW,QAEpB,IAMH,OACI,0BAASkB,UAAU,iBAAnB,UACI,oBAAIC,MAAM,OAAV,qDACCpB,GAAW,mBAAGmB,UAAU,KAAb,wBAChB,qBAAKA,UAAU,MAAf,SACKrB,EAAOuB,KAAI,SAACC,GACT,OACI,qBAAKH,UAAU,kCAAf,SACI,0BAASA,UAAU,iBAAnB,UACI,oBAAIA,UAAU,KAAd,SAAoBG,EAAGC,OACvB,oBAAGJ,UAAU,OAAb,UAAoB,4CAApB,IAAuC,uBAAMG,EAAGE,cAChD,oBAAGL,UAAU,OAAb,UAAoB,wCAApB,IAAmC,uBAAMG,EAAGG,eAJEH,EAAGC,WAWrE,wBAAQG,KAAK,SAASP,UAAU,eAAeQ,SAtBjC,WACd5B,EAAWD,IAqBX,2BC3CO8B,MARf,WACE,OACE,qBAAKT,UAAU,MAAf,SACE,cAAC,EAAD,OCDNU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ffa8ce14.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst Star = () => {\n    const [planet, setPlanets]  = useState([])\n    const [loading, setLoading] = useState(false)\n    const [apiCall, setApiCall] = useState(0)\n    const [error, setError]     = useState(\"\")\n    \n    useEffect(() => {\n        setLoading(true)\n        const url = `https://swapi.dev/api/planets`;\n\n        fetch(url)\n            .then((response) => {\n                setApiCall(a => a + 1)\n                if(!response.ok) {\n                    throw new Error(`Planète introuvable, status: ${response.status}`)\n                }\n                return response.json()\n            })\n            .then((data) => {\n                // console.log(data)\n                setPlanets(data.results)\n            })\n            .catch((error) => {\n                setError(error.message)\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }, [])\n    \n    const addPlanet = () => {\n        setPlanets(planet)\n    }\n\n    return (\n        <section className=\"container py-5\" >\n            <h1 class=\"mb-5\">Planètes dans l'univers de Star Wars</h1>\n            {loading && <p className=\"h1\">Loading...</p>}\n        <div className=\"row\">\n            {planet.map((el) => {\n                return (\n                    <div className=\"col-md-6 col-lg-4 col-xl-3 mb-4\" key={el.name}>\n                        <article className=\"bg-warning p-3\">\n                            <h2 className=\"h5\">{el.name}</h2>\n                            <p className=\"mb-0\"><b>Population:</b> <br/>{el.population}</p> \n                            <p className=\"mb-0\"><b>Climat:</b> <br/>{el.climate}</p> \n                        </article> \n                    </div>   \n                )\n            })}\n            \n        </div>\n        <button type=\"button\" className=\"btn btn-dark\" onChange={addPlanet}>Suivantes</button>\n        </section>\n    )\n};\n\nexport default Star;","import './App.css';\nimport Star from './Components/Star'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Star />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}